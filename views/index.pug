extends layout

block javascripts
  script(src='/js/lib/chart.js')

block content
  - const usdFormatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 2, maximumFractionDigits: 2 });
  .container
    .row
      .col
        .card.mt-4
          .card-header
            h2 Latest Withdrawls
          .card-body
            table.table.table-hover
              thead
                tr
                  th Slot
                  th Date
                  th ETH Value
                  th USD Value
              tbody
                each withdrawal in latestWithdrawals
                  tr
                    td
                      a(href='/slot/' + withdrawal.slot_id)= withdrawal.slot_id
                    td
                      span(data-bs-toggle='tooltip', data-bs-placement='top', data-bs-title=datefns.formatDistance(withdrawal.stamp, new Date(), {addSuffix: true}))= datefns.formatISO9075(withdrawal.stamp)
                    td= Number(withdrawal.eth_amount)
                    td= usdFormatter.format(withdrawal.usd_amount)
          .card-footer
            a.btn.btn-primary.float-end(href='/withdrawals') More Withdrawals &gt;&gt;
      .col
        .card.mt-4
          .card-header
            h2 Withdrawls per Slot
          .card-body
            canvas#chart
            table.table.table-hover
              thead
                tr
                  th Slot
                  th Date
                  th ETH Total
                  th USD Total
              tbody
                each withdrawal in withdrawalsPerSlot
                  tr
                    td
                      a(href='/slot/' + withdrawal.slot_id)= withdrawal.slot_id
                    td
                      span(data-bs-toggle='tooltip', data-bs-placement='top', data-bs-title=datefns.formatDistance(withdrawal.stamp, new Date(), {addSuffix: true}))= datefns.formatISO9075(withdrawal.stamp)
                    td= Number(withdrawal.eth_value)
                    td= usdFormatter.format(withdrawal.usd_value)
          .card-footer
            a.btn.btn-primary.float-end(href='/slots') More Slots &gt;&gt;
    .row
      .col
        .card.mt-4
          .card-header
            h2 Largest Withdrawals
          .card-body
            table.table.table-hover
              thead
                tr
                  th Slot
                  th Date
                  th Validator
                  th ETH Value
                  th USD Value
              tbody
                each withdrawal in largestWithdrawals
                  tr
                    td
                      a(href='/slot/' + withdrawal.slot_id)= withdrawal.slot_id
                    td
                      span(data-bs-toggle='tooltip', data-bs-placement='top', data-bs-title=datefns.formatDistance(withdrawal.stamp, new Date(), {addSuffix: true}))= datefns.formatISO9075(withdrawal.stamp)
                    td
                      a(href='/validator/' + withdrawal.validator_id)= withdrawal.validator_id
                    td= Number(withdrawal.eth_amount)
                    td= usdFormatter.format(withdrawal.usd_amount)

  script.
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    $.ajax({ type: 'GET', url: '/api/withdrawals.json',
             dataType: 'json', success: (data) => {
        new Chart(document.getElementById('chart'), {
          type: 'line',
          data: {
            labels: data.map(row => row.slot_id),
            datasets: [{
              label: 'Total Withdrawan',
              data: data.map(row => row.usd_total),
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            scales: {
              logScale: {
                type: 'logarithmic',
                position: 'left'
              }
            },
            onClick(e) {
              const activePoints = this.getElementsAtEventForMode(e, 'nearest', {
                intersect: true
              }, false);
              const [{
                index
              }] = activePoints;
              window.location = '/slot/' + data[index].slot_id;
            },
            plugins: {
              legend: {
                position: 'top',
              },
              title: {
                display: true,
                text: 'Withdrawals by Slot'
              }
            }
          }
        });
      }
    });
